// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.di.module;

import android.app.Application;
import com.aguedagg.weatherapp.data.database.AppRoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideAppRoomDatabaseFactory implements Factory<AppRoomDatabase> {
  private final RoomModule module;

  private final Provider<Application> applicationProvider;

  public RoomModule_ProvideAppRoomDatabaseFactory(RoomModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public AppRoomDatabase get() {
    return provideAppRoomDatabase(module, applicationProvider.get());
  }

  public static RoomModule_ProvideAppRoomDatabaseFactory create(RoomModule module,
      Provider<Application> applicationProvider) {
    return new RoomModule_ProvideAppRoomDatabaseFactory(module, applicationProvider);
  }

  public static AppRoomDatabase provideAppRoomDatabase(RoomModule instance,
      Application application) {
    return Preconditions.checkNotNull(instance.provideAppRoomDatabase(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
