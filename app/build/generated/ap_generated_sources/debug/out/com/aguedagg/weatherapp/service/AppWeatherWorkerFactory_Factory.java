// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.service;

import androidx.work.ListenableWorker;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppWeatherWorkerFactory_Factory implements Factory<AppWeatherWorkerFactory> {
  private final Provider<Map<Class<? extends ListenableWorker>, Provider<WeatherWorkerFactory>>> workersFactoriesProvider;

  public AppWeatherWorkerFactory_Factory(
      Provider<Map<Class<? extends ListenableWorker>, Provider<WeatherWorkerFactory>>> workersFactoriesProvider) {
    this.workersFactoriesProvider = workersFactoriesProvider;
  }

  @Override
  public AppWeatherWorkerFactory get() {
    return new AppWeatherWorkerFactory(workersFactoriesProvider.get());
  }

  public static AppWeatherWorkerFactory_Factory create(
      Provider<Map<Class<? extends ListenableWorker>, Provider<WeatherWorkerFactory>>> workersFactoriesProvider) {
    return new AppWeatherWorkerFactory_Factory(workersFactoriesProvider);
  }

  public static AppWeatherWorkerFactory newInstance(
      Map<Class<? extends ListenableWorker>, Provider<WeatherWorkerFactory>> workersFactories) {
    return new AppWeatherWorkerFactory(workersFactories);
  }
}
