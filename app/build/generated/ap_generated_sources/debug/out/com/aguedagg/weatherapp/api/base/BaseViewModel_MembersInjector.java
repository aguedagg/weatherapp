// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.api.base;

import com.aguedagg.weatherapp.api.base.rx.SchedulerProvider;
import com.aguedagg.weatherapp.data.DataManager;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<DataManager> dataManagerProvider;

  private final Provider<SchedulerProvider> schedulerProvider;

  public BaseViewModel_MembersInjector(Provider<DataManager> dataManagerProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    this.dataManagerProvider = dataManagerProvider;
    this.schedulerProvider = schedulerProvider;
  }

  public static MembersInjector<BaseViewModel> create(Provider<DataManager> dataManagerProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    return new BaseViewModel_MembersInjector(dataManagerProvider, schedulerProvider);}

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectDataManager(instance, dataManagerProvider.get());
    injectSchedulerProvider(instance, schedulerProvider.get());
  }

  public static void injectDataManager(BaseViewModel instance, DataManager dataManager) {
    instance.dataManager = dataManager;
  }

  public static void injectSchedulerProvider(BaseViewModel instance,
      SchedulerProvider schedulerProvider) {
    instance.schedulerProvider = schedulerProvider;
  }
}
