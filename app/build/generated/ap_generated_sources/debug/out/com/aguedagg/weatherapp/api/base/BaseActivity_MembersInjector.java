// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.api.base;

import androidx.databinding.ViewDataBinding;
import com.aguedagg.weatherapp.di.module.ViewModelProviderFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<T extends ViewDataBinding, V extends BaseViewModel> implements MembersInjector<BaseActivity<T, V>> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProviderFactory> factoryProvider;

  public BaseActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> factoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.factoryProvider = factoryProvider;
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel> MembersInjector<BaseActivity<T, V>> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> factoryProvider) {
    return new BaseActivity_MembersInjector<T, V>(androidInjectorProvider, factoryProvider);}

  @Override
  public void injectMembers(BaseActivity<T, V> instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectFactory(instance, factoryProvider.get());
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel> void injectFactory(
      BaseActivity<T, V> instance, ViewModelProviderFactory factory) {
    instance.factory = factory;
  }
}
