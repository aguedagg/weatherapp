// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherModule_ProvideHttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private static final WeatherModule_ProvideHttpLoggingInterceptorFactory INSTANCE = new WeatherModule_ProvideHttpLoggingInterceptorFactory();

  @Override
  public HttpLoggingInterceptor get() {
    return provideHttpLoggingInterceptor();
  }

  public static WeatherModule_ProvideHttpLoggingInterceptorFactory create() {
    return INSTANCE;
  }

  public static HttpLoggingInterceptor provideHttpLoggingInterceptor() {
    return Preconditions.checkNotNull(WeatherModule.provideHttpLoggingInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
