// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.data;

import com.aguedagg.weatherapp.api.rest.WeatherRepository;
import com.aguedagg.weatherapp.data.helper.RoomHelper;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDataManager_MembersInjector implements MembersInjector<AppDataManager> {
  private final Provider<RoomHelper> roomHelperProvider;

  private final Provider<WeatherRepository> repositoryProvider;

  public AppDataManager_MembersInjector(Provider<RoomHelper> roomHelperProvider,
      Provider<WeatherRepository> repositoryProvider) {
    this.roomHelperProvider = roomHelperProvider;
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<AppDataManager> create(Provider<RoomHelper> roomHelperProvider,
      Provider<WeatherRepository> repositoryProvider) {
    return new AppDataManager_MembersInjector(roomHelperProvider, repositoryProvider);}

  @Override
  public void injectMembers(AppDataManager instance) {
    injectRoomHelper(instance, roomHelperProvider.get());
    injectRepository(instance, repositoryProvider.get());
  }

  public static void injectRoomHelper(AppDataManager instance, RoomHelper roomHelper) {
    instance.roomHelper = roomHelper;
  }

  public static void injectRepository(AppDataManager instance, WeatherRepository repository) {
    instance.repository = repository;
  }
}
