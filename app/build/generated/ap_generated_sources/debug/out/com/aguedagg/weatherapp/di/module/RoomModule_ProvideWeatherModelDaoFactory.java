// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.di.module;

import com.aguedagg.weatherapp.data.dao.WeatherModelDao;
import com.aguedagg.weatherapp.data.database.AppRoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideWeatherModelDaoFactory implements Factory<WeatherModelDao> {
  private final RoomModule module;

  private final Provider<AppRoomDatabase> dbProvider;

  public RoomModule_ProvideWeatherModelDaoFactory(RoomModule module,
      Provider<AppRoomDatabase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public WeatherModelDao get() {
    return provideWeatherModelDao(module, dbProvider.get());
  }

  public static RoomModule_ProvideWeatherModelDaoFactory create(RoomModule module,
      Provider<AppRoomDatabase> dbProvider) {
    return new RoomModule_ProvideWeatherModelDaoFactory(module, dbProvider);
  }

  public static WeatherModelDao provideWeatherModelDao(RoomModule instance, AppRoomDatabase db) {
    return Preconditions.checkNotNull(instance.provideWeatherModelDao(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
