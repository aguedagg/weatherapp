// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.api.rest;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppWeatherRepository_Factory implements Factory<AppWeatherRepository> {
  private final Provider<WeatherApi> apiProvider;

  public AppWeatherRepository_Factory(Provider<WeatherApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public AppWeatherRepository get() {
    AppWeatherRepository instance = new AppWeatherRepository(apiProvider.get());
    AppWeatherRepository_MembersInjector.injectApi(instance, apiProvider.get());
    return instance;
  }

  public static AppWeatherRepository_Factory create(Provider<WeatherApi> apiProvider) {
    return new AppWeatherRepository_Factory(apiProvider);
  }

  public static AppWeatherRepository newInstance(WeatherApi api) {
    return new AppWeatherRepository(api);
  }
}
