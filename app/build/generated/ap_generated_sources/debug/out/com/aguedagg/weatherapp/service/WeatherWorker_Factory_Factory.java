// Generated by Dagger (https://dagger.dev).
package com.aguedagg.weatherapp.service;

import com.aguedagg.weatherapp.api.rest.WeatherApi;
import com.aguedagg.weatherapp.data.helper.RoomHelper;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherWorker_Factory_Factory implements Factory<WeatherWorker.Factory> {
  private final Provider<WeatherApi> weatherApiProvider;

  private final Provider<RoomHelper> roomHelperProvider;

  public WeatherWorker_Factory_Factory(Provider<WeatherApi> weatherApiProvider,
      Provider<RoomHelper> roomHelperProvider) {
    this.weatherApiProvider = weatherApiProvider;
    this.roomHelperProvider = roomHelperProvider;
  }

  @Override
  public WeatherWorker.Factory get() {
    return new WeatherWorker.Factory(weatherApiProvider, roomHelperProvider);
  }

  public static WeatherWorker_Factory_Factory create(Provider<WeatherApi> weatherApiProvider,
      Provider<RoomHelper> roomHelperProvider) {
    return new WeatherWorker_Factory_Factory(weatherApiProvider, roomHelperProvider);
  }

  public static WeatherWorker.Factory newInstance(Provider<WeatherApi> weatherApiProvider,
      Provider<RoomHelper> roomHelperProvider) {
    return new WeatherWorker.Factory(weatherApiProvider, roomHelperProvider);
  }
}
